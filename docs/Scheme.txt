V   * загрузить все словоформы подсчитывая их используемость
V   * сохранить их в sqlite-таблице:
V       id      wf      freq
V   * разбить на N-граммы
V       id      ngr     wf_id
V   * выбирать словоформы в порядке убывания длины с используемостью не ниже пороговой (###)
    * для кажой словоформы выбрать кандидатов на составление списка аффиксов
V       * найти все N-граммы и по таблице N-грамм сформировать список кандидатов
        * для каждого кандидата посчитать его свертку-по-максимальной-общей-части (еще надо реализовать)
          ниже приведены примеры таких сверток
            abcd    abcd    0   // обе строки равны
            abcd    abcx    1   // максимальная общая часть -- первые три символа. Остался 1 символ
            abcd    axcd    2   // максимальная общая часть -- последние два символа. Осталось еще 2 символа
    * кандидаты отсортировать в порядке возрастания свертки
    * для кандидатов у которых расстояние не меньше пороговой величины (###)
      выделить общую часть. Оставшиеся части добавить в таблицу кандидатов на аффиксы
        id      afx     type    wf_id
      здесь type -- тип предполагаемого аффикса (префикс/суффикс/...)


